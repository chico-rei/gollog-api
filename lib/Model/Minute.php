<?php
/**
 * Minute
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Central do desenvolvedor - Nexlog API
 *
 * De maneira pratica e rápida, entenda como conectar e consumir todas as informações necessárias para seu negócio. </br> <h2> Ambientes</h2> Os ambientes do gateway de integração são divididos atualmente em 2 ambientes:<br> &ensp;&ensp;&ensp;&ensp;&ensp;<b>QA</b>:&ensp;ambiente utilizado para desenvolvimento de novas integrações e testes com os clientes e parceiros.<br>&ensp;&ensp;&ensp;<b>Prod</b>:&ensp;ambiente de produção com todas os serviços expostos com certificação de qualidade. </br> <h2>Informações Adicionais</h2>                 A central do desenvolvedor conta com uma completa documentação referente a todos os APIs expostos, com exemplos de request/response, modelo e possibilidade de realizar testes direto no barramento. </br></br> Atualmente nossa central está separada com 2 dominios de integração:</br>&ensp;&ensp;&ensp; <b>- Account</b> <br> &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;Serviços para autenticação quando necessário.</br>&ensp;&ensp;&ensp; <b>- Sales</b> <br> &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;Disponibilização de serviços para utilização de rastreio, cotações, minutas e documentos autorizados.<br>&ensp;&ensp;&ensp; <b>- Operations</b> <br> &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;Disponibilização de consulta de bases operacionais.<br>(*)Dependendo do endpoint utilizado, algumas informações são obrigatórias, como identificador da aplicação/cliente e token.<br><br> Dúvidas sobre como utilizar, entre em contato br-operations@ttinteractive.com
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.10
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Minute Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Minute implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Minute';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id_third_party_company_order' => 'string',
        'origin_point_code' => 'string',
        'origin_postal_code' => 'string',
        'destination_point_code' => 'string',
        'destination_postal_code' => 'string',
        'service_code' => 'string',
        'to_delivery' => 'bool',
        'to_collect' => 'bool',
        'contract_information' => '\Swagger\Client\Model\ContratctInformation',
        'insurance_type' => 'int',
        'declared_value' => 'float',
        'previous_documents' => '\Swagger\Client\Model\Documents',
        'sender' => '\Swagger\Client\Model\Participant',
        'receiver' => '\Swagger\Client\Model\Participant',
        'shipper' => '\Swagger\Client\Model\Participant',
        'consignee' => '\Swagger\Client\Model\Participant',
        'volumes' => '\Swagger\Client\Model\Volume[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id_third_party_company_order' => null,
        'origin_point_code' => null,
        'origin_postal_code' => null,
        'destination_point_code' => null,
        'destination_postal_code' => null,
        'service_code' => null,
        'to_delivery' => null,
        'to_collect' => null,
        'contract_information' => null,
        'insurance_type' => 'int16',
        'declared_value' => 'decimal',
        'previous_documents' => null,
        'sender' => null,
        'receiver' => null,
        'shipper' => null,
        'consignee' => null,
        'volumes' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id_third_party_company_order' => 'idThirdPartyCompanyOrder',
        'origin_point_code' => 'originPointCode',
        'origin_postal_code' => 'originPostalCode',
        'destination_point_code' => 'destinationPointCode',
        'destination_postal_code' => 'destinationPostalCode',
        'service_code' => 'serviceCode',
        'to_delivery' => 'toDelivery',
        'to_collect' => 'toCollect',
        'contract_information' => 'contractInformation',
        'insurance_type' => 'insuranceType',
        'declared_value' => 'declaredValue',
        'previous_documents' => 'previousDocuments',
        'sender' => 'sender',
        'receiver' => 'receiver',
        'shipper' => 'shipper',
        'consignee' => 'consignee',
        'volumes' => 'volumes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id_third_party_company_order' => 'setIdThirdPartyCompanyOrder',
        'origin_point_code' => 'setOriginPointCode',
        'origin_postal_code' => 'setOriginPostalCode',
        'destination_point_code' => 'setDestinationPointCode',
        'destination_postal_code' => 'setDestinationPostalCode',
        'service_code' => 'setServiceCode',
        'to_delivery' => 'setToDelivery',
        'to_collect' => 'setToCollect',
        'contract_information' => 'setContractInformation',
        'insurance_type' => 'setInsuranceType',
        'declared_value' => 'setDeclaredValue',
        'previous_documents' => 'setPreviousDocuments',
        'sender' => 'setSender',
        'receiver' => 'setReceiver',
        'shipper' => 'setShipper',
        'consignee' => 'setConsignee',
        'volumes' => 'setVolumes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id_third_party_company_order' => 'getIdThirdPartyCompanyOrder',
        'origin_point_code' => 'getOriginPointCode',
        'origin_postal_code' => 'getOriginPostalCode',
        'destination_point_code' => 'getDestinationPointCode',
        'destination_postal_code' => 'getDestinationPostalCode',
        'service_code' => 'getServiceCode',
        'to_delivery' => 'getToDelivery',
        'to_collect' => 'getToCollect',
        'contract_information' => 'getContractInformation',
        'insurance_type' => 'getInsuranceType',
        'declared_value' => 'getDeclaredValue',
        'previous_documents' => 'getPreviousDocuments',
        'sender' => 'getSender',
        'receiver' => 'getReceiver',
        'shipper' => 'getShipper',
        'consignee' => 'getConsignee',
        'volumes' => 'getVolumes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id_third_party_company_order'] = isset($data['id_third_party_company_order']) ? $data['id_third_party_company_order'] : null;
        $this->container['origin_point_code'] = isset($data['origin_point_code']) ? $data['origin_point_code'] : null;
        $this->container['origin_postal_code'] = isset($data['origin_postal_code']) ? $data['origin_postal_code'] : null;
        $this->container['destination_point_code'] = isset($data['destination_point_code']) ? $data['destination_point_code'] : null;
        $this->container['destination_postal_code'] = isset($data['destination_postal_code']) ? $data['destination_postal_code'] : null;
        $this->container['service_code'] = isset($data['service_code']) ? $data['service_code'] : null;
        $this->container['to_delivery'] = isset($data['to_delivery']) ? $data['to_delivery'] : null;
        $this->container['to_collect'] = isset($data['to_collect']) ? $data['to_collect'] : null;
        $this->container['contract_information'] = isset($data['contract_information']) ? $data['contract_information'] : null;
        $this->container['insurance_type'] = isset($data['insurance_type']) ? $data['insurance_type'] : null;
        $this->container['declared_value'] = isset($data['declared_value']) ? $data['declared_value'] : null;
        $this->container['previous_documents'] = isset($data['previous_documents']) ? $data['previous_documents'] : null;
        $this->container['sender'] = isset($data['sender']) ? $data['sender'] : null;
        $this->container['receiver'] = isset($data['receiver']) ? $data['receiver'] : null;
        $this->container['shipper'] = isset($data['shipper']) ? $data['shipper'] : null;
        $this->container['consignee'] = isset($data['consignee']) ? $data['consignee'] : null;
        $this->container['volumes'] = isset($data['volumes']) ? $data['volumes'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id_third_party_company_order
     *
     * @return string
     */
    public function getIdThirdPartyCompanyOrder()
    {
        return $this->container['id_third_party_company_order'];
    }

    /**
     * Sets id_third_party_company_order
     *
     * @param string $id_third_party_company_order A control number from the third party company order
     *
     * @return $this
     */
    public function setIdThirdPartyCompanyOrder($id_third_party_company_order)
    {
        $this->container['id_third_party_company_order'] = $id_third_party_company_order;

        return $this;
    }

    /**
     * Gets origin_point_code
     *
     * @return string
     */
    public function getOriginPointCode()
    {
        return $this->container['origin_point_code'];
    }

    /**
     * Sets origin_point_code
     *
     * @param string $origin_point_code Origin point(office, airport) code example \"GRU\"
     *
     * @return $this
     */
    public function setOriginPointCode($origin_point_code)
    {
        $this->container['origin_point_code'] = $origin_point_code;

        return $this;
    }

    /**
     * Gets origin_postal_code
     *
     * @return string
     */
    public function getOriginPostalCode()
    {
        return $this->container['origin_postal_code'];
    }

    /**
     * Sets origin_postal_code
     *
     * @param string $origin_postal_code Destination point name example \"GRU - CARGAS S/A\".
     *
     * @return $this
     */
    public function setOriginPostalCode($origin_postal_code)
    {
        $this->container['origin_postal_code'] = $origin_postal_code;

        return $this;
    }

    /**
     * Gets destination_point_code
     *
     * @return string
     */
    public function getDestinationPointCode()
    {
        return $this->container['destination_point_code'];
    }

    /**
     * Sets destination_point_code
     *
     * @param string $destination_point_code Destination point(airport or office) code example \"REC\".
     *
     * @return $this
     */
    public function setDestinationPointCode($destination_point_code)
    {
        $this->container['destination_point_code'] = $destination_point_code;

        return $this;
    }

    /**
     * Gets destination_postal_code
     *
     * @return string
     */
    public function getDestinationPostalCode()
    {
        return $this->container['destination_postal_code'];
    }

    /**
     * Sets destination_postal_code
     *
     * @param string $destination_postal_code Destination point name example \"REC - CARGAS S/A\".
     *
     * @return $this
     */
    public function setDestinationPostalCode($destination_postal_code)
    {
        $this->container['destination_postal_code'] = $destination_postal_code;

        return $this;
    }

    /**
     * Gets service_code
     *
     * @return string
     */
    public function getServiceCode()
    {
        return $this->container['service_code'];
    }

    /**
     * Sets service_code
     *
     * @param string $service_code Service code example \"NOR\".
     *
     * @return $this
     */
    public function setServiceCode($service_code)
    {
        $this->container['service_code'] = $service_code;

        return $this;
    }

    /**
     * Gets to_delivery
     *
     * @return bool
     */
    public function getToDelivery()
    {
        return $this->container['to_delivery'];
    }

    /**
     * Sets to_delivery
     *
     * @param bool $to_delivery Set true if is to delivery false if not.
     *
     * @return $this
     */
    public function setToDelivery($to_delivery)
    {
        $this->container['to_delivery'] = $to_delivery;

        return $this;
    }

    /**
     * Gets to_collect
     *
     * @return bool
     */
    public function getToCollect()
    {
        return $this->container['to_collect'];
    }

    /**
     * Sets to_collect
     *
     * @param bool $to_collect Set true if is to collect false if not.
     *
     * @return $this
     */
    public function setToCollect($to_collect)
    {
        $this->container['to_collect'] = $to_collect;

        return $this;
    }

    /**
     * Gets contract_information
     *
     * @return \Swagger\Client\Model\ContratctInformation
     */
    public function getContractInformation()
    {
        return $this->container['contract_information'];
    }

    /**
     * Sets contract_information
     *
     * @param \Swagger\Client\Model\ContratctInformation $contract_information contract_information
     *
     * @return $this
     */
    public function setContractInformation($contract_information)
    {
        $this->container['contract_information'] = $contract_information;

        return $this;
    }

    /**
     * Gets insurance_type
     *
     * @return int
     */
    public function getInsuranceType()
    {
        return $this->container['insurance_type'];
    }

    /**
     * Sets insurance_type
     *
     * @param int $insurance_type Insurance Type:  * 0 - Customer  * 1 - Company  * 2 - Uninsured
     *
     * @return $this
     */
    public function setInsuranceType($insurance_type)
    {
        $this->container['insurance_type'] = $insurance_type;

        return $this;
    }

    /**
     * Gets declared_value
     *
     * @return float
     */
    public function getDeclaredValue()
    {
        return $this->container['declared_value'];
    }

    /**
     * Sets declared_value
     *
     * @param float $declared_value Goods total value for insurance purpose.
     *
     * @return $this
     */
    public function setDeclaredValue($declared_value)
    {
        $this->container['declared_value'] = $declared_value;

        return $this;
    }

    /**
     * Gets previous_documents
     *
     * @return \Swagger\Client\Model\Documents
     */
    public function getPreviousDocuments()
    {
        return $this->container['previous_documents'];
    }

    /**
     * Sets previous_documents
     *
     * @param \Swagger\Client\Model\Documents $previous_documents previous_documents
     *
     * @return $this
     */
    public function setPreviousDocuments($previous_documents)
    {
        $this->container['previous_documents'] = $previous_documents;

        return $this;
    }

    /**
     * Gets sender
     *
     * @return \Swagger\Client\Model\Participant
     */
    public function getSender()
    {
        return $this->container['sender'];
    }

    /**
     * Sets sender
     *
     * @param \Swagger\Client\Model\Participant $sender sender
     *
     * @return $this
     */
    public function setSender($sender)
    {
        $this->container['sender'] = $sender;

        return $this;
    }

    /**
     * Gets receiver
     *
     * @return \Swagger\Client\Model\Participant
     */
    public function getReceiver()
    {
        return $this->container['receiver'];
    }

    /**
     * Sets receiver
     *
     * @param \Swagger\Client\Model\Participant $receiver receiver
     *
     * @return $this
     */
    public function setReceiver($receiver)
    {
        $this->container['receiver'] = $receiver;

        return $this;
    }

    /**
     * Gets shipper
     *
     * @return \Swagger\Client\Model\Participant
     */
    public function getShipper()
    {
        return $this->container['shipper'];
    }

    /**
     * Sets shipper
     *
     * @param \Swagger\Client\Model\Participant $shipper shipper
     *
     * @return $this
     */
    public function setShipper($shipper)
    {
        $this->container['shipper'] = $shipper;

        return $this;
    }

    /**
     * Gets consignee
     *
     * @return \Swagger\Client\Model\Participant
     */
    public function getConsignee()
    {
        return $this->container['consignee'];
    }

    /**
     * Sets consignee
     *
     * @param \Swagger\Client\Model\Participant $consignee consignee
     *
     * @return $this
     */
    public function setConsignee($consignee)
    {
        $this->container['consignee'] = $consignee;

        return $this;
    }

    /**
     * Gets volumes
     *
     * @return \Swagger\Client\Model\Volume[]
     */
    public function getVolumes()
    {
        return $this->container['volumes'];
    }

    /**
     * Sets volumes
     *
     * @param \Swagger\Client\Model\Volume[] $volumes volumes
     *
     * @return $this
     */
    public function setVolumes($volumes)
    {
        $this->container['volumes'] = $volumes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


